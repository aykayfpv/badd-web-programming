"use strict";(self.webpackChunkpackages_lecture=self.webpackChunkpackages_lecture||[]).push([[8433],{50316:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"exam/advanced/exam-advanced-dynamic-form-generation","title":"Dynamische Formularerstellung","description":"Dynamische Erstellung eines Formulars auf Grundlage eines Datenmodells","source":"@site/docs/exam/advanced/dynamic-form-generation.mdx","sourceDirName":"exam/advanced","slug":"/exam/basic/dynamic-form-generation","permalink":"/badd-web-programming/docs/exam/basic/dynamic-form-generation","draft":false,"unlisted":false,"editUrl":"https://github.com/blutorange/badd-web-programming/tree/main/packages/lecture/docs/exam/advanced/dynamic-form-generation.mdx","tags":[],"version":"current","frontMatter":{"id":"exam-advanced-dynamic-form-generation","slug":"/exam/basic/dynamic-form-generation","description":"Dynamische Erstellung eines Formulars auf Grundlage eines Datenmodells"},"sidebar":"tutorialSidebar","previous":{"title":"Chat","permalink":"/badd-web-programming/docs/exam/basic/chat"},"next":{"title":"Ping-Pong","permalink":"/badd-web-programming/docs/exam/basic/ping-pong"}}');var t=r(31085),a=r(71184);const s={id:"exam-advanced-dynamic-form-generation",slug:"/exam/basic/dynamic-form-generation",description:"Dynamische Erstellung eines Formulars auf Grundlage eines Datenmodells"},d="Dynamische Formularerstellung",l={},o=[{value:"Mindestanforderungen",id:"mindestanforderungen",level:2},{value:"Hinweise",id:"hinweise",level:2}];function m(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dynamische-formularerstellung",children:"Dynamische Formularerstellung"})}),"\n",(0,t.jsx)(n.p,{children:"Anhand von JSON-Daten soll ein Formular erstellt und entsprechend mit Interaktion\nversehen werden."}),"\n",(0,t.jsx)(n.h2,{id:"mindestanforderungen",children:"Mindestanforderungen"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 Eingabefeld f\xfcr eine JSON-Datenstruktur, welche das Formular darstellt."}),"\n",(0,t.jsxs)(n.li,{children:["1 Button ",(0,t.jsx)(n.code,{children:"Formular erzeugen"}),", der anhand der JSON-Daten ein interaktives Formular\nerzeugt."]}),"\n",(0,t.jsx)(n.li,{children:"Die konkrete Struktur des JSON kann beliebig festgelegt werden. Unten ist ein\nm\xf6gliches Beispiel."}),"\n",(0,t.jsx)(n.li,{children:"Es sind wenigstens alle Features zu unterst\xfctzen, welche im Beispiel unten\nverwendet werden."}),"\n"]}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "title": "Antragsformular",\n  "action": "https://example.com/submit",\n  "method": "post",\n  "fieldsets": [\n    {\n      "legend": "Kontaktdaten",\n      "rows": [\n        {\n          "fields": [\n            {\n              "id": "kontakt_vor",\n              "type": "text",\n              "required": true,\n              "label": "Vorname",\n              "datatype": "text"\n            },\n            {\n              "id": "kontakt_nach",\n              "type": "text",\n              "required": true,\n              "label": "Nachname",\n              "datatype": "text"\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "kontakt_name",\n              "type": "computed",\n              "label": "Name",\n              "formula": "stringValue(\\"kontakt_nach\\") + \\", \\" + stringValue(\\"kontakt_vor\\")"\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "kontakt_mail",\n              "type": "text",\n              "required": true,\n              "label": "E-Mail",\n              "datatype": "email"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      "legend": "Interessen",\n      "rows": [\n        {\n          "fields": [\n            {\n              "id": "interessen_eier",\n              "type": "single_select",\n              "required": true,\n              "label": "Eierkuchen-Belag",\n              "options": [\n                {"name": "Apfelmus", "value": "am"},\n                {"name": "Honig", "value": "h"},\n                {"name": "Nougat", "value": "ng"}\n              ]\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "interessen_hobbies",\n              "type": "multi_select",\n              "required": true,\n              "label": "Hobbies",\n              "options": [\n                {"name": "Lesen", "value": "l"},\n                {"name": "Schwimmen", "value": "s"},\n                {"name": "Radfahren", "value": "rf"}\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      "legend": "Einkommen",\n      "rows": [\n        {\n          "fields": [\n            {\n              "id": "einkommen_haupt",\n              "type": "text",\n              "required": true,\n              "label": "Haupteinkommen (Euro)",\n              "datatype": "number",\n              "min": 0,\n              "max": 10000\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "einkommen_neben",\n              "type": "text",\n              "required": true,\n              "label": "Nebeneinkommen (Euro)",\n              "datatype": "number",\n              "min": 0,\n              "max": 10000\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "einkommen_gesamt",\n              "type": "computed",\n              "label": "Gesamteinkommen",\n              "formula": "numberValue(\\"einkommen_haupt\\") + numberValue(\\"einkommen_neben\\")"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      "legend": "Weiteres",\n      "rows": [\n        {\n          "fields": [\n            {\n              "id": "weiteres_anmerkungen",\n              "type": "textarea",\n              "required": false,\n              "label": "Weitere Anmerkungen"\n            }\n          ]\n        },\n        {\n          "fields": [\n            {\n              "id": "weiteres_agb",\n              "type": "checkbox",\n              "required": true,\n              "label": "Ich stimme der Verarbeitung meiner Daten zu"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n'})})}),"\n",(0,t.jsx)(n.p,{children:"Obiges JSON w\xfcrde etwa folgendes Formular erzeugen:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Form rendered from the above JSON data",src:r(85740).A+"",width:"869",height:"1433"})}),"\n",(0,t.jsx)(n.p,{children:"Konkret muss das Formular aus mehreren Fieldsets bestehen k\xf6nnen, wobei jedes\nFieldset aus Zeilen besteht. Jede Zeile enth\xe4lt ein oder mehrere Formularfelder.\nEnth\xe4lt eine Zeile mehrere Formularfelder, werden diese nebeneinander angeordnet."}),"\n",(0,t.jsx)(n.p,{children:"Jedes Formularfeld hat eine eindeutig ID, sowie ein Label und ist entweder ein Pflichtfeld oder nicht.\nFolgende Arten von Formularfeldern sollen unterst\xfctzt werden."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Einzeiliges Eingabefeld, mit Festlegung des Datentyps."}),"\n",(0,t.jsx)(n.li,{children:"Mehrzeiliges Eingabefeld"}),"\n",(0,t.jsx)(n.li,{children:"Checkbox, die angehakt oder abgehakt ist"}),"\n",(0,t.jsx)(n.li,{children:"Einfache Auswahl, die nur die Auswahl 1 Option erlaubt"}),"\n",(0,t.jsx)(n.li,{children:"Mehrfache Auswahl, die die Auswahl mehrere Optionen erlaubt"}),"\n",(0,t.jsxs)(n.li,{children:["Berechnungsfeld, dessen Wert sich anhand einer vom Nutzer eingegebenen Formel\nergibt. Das der Wert berechnet ist, darf der Nutzer den Wert nicht manuell\n\xe4ndern. Die Formel ist eine ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Expression_(computer_science)",children:"JavaScript-Expression"}),",\nwelche in einem Scope ausgewertet wird, wo die Symbole ",(0,t.jsx)(n.code,{children:"numberValue"})," und ",(0,t.jsx)(n.code,{children:"stringValue"}),"\nzur Verf\xfcgung stehen. Der Wert ist jeweils eine Funktion, welche die ID eines\nFormularfelds entgegennimmt und den Wert von diesem Feld zur\xfcckliefert, entweder\nals Zahl oder als String."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"hinweise",children:"Hinweise"}),"\n",(0,t.jsxs)(n.p,{children:["Zum Ausf\xfchren von JavaScript kann ein ",(0,t.jsx)(n.code,{children:"<script>"}),"-Element erzeugt werden,\nwelches in den ",(0,t.jsx)(n.code,{children:"<head>"})," eingehangen wird und direkt danach wieder entfernt wird.\nUm den Wert der Expression abzugreifen, kann dieser tempor\xe4r in eine globale\nVariable geschrieben werden. Um Symbole im Scope der Expression verf\xfcgbar zu\nmachen, kann die Expression in einer ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/IIFE",children:"IIFE"}),"\ngewrapped werden, welche die Symbole als Funktionsparameter deklariert."]}),"\n",(0,t.jsx)(n.p,{children:"Vor Beginn dieser Aufgabe sollte man sich die Datenstruktur gut durchdenken\nund damit vertraut machen."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},71184:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>d});var i=r(14041);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},85740:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/dynamic-form-16fc89d5af2b12865c4ccdbac72681a4.png"}}]);