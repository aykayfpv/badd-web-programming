"use strict";(self.webpackChunkpackages_lecture=self.webpackChunkpackages_lecture||[]).push([[1015],{1015:(e,r,n)=>{n.r(r),n.d(r,{default:()=>t});const t='findCityForZipCode("01277")\n  .then(city => findMostFamousRestaurantForCity(city))\n  .then(restaurant => findOpenHoursForRestaurant(restaurant))\n  .then(hours => findUserFreeTimeForHours(hours))\n  .then(freeTime => console.log(`Restaurant visit: ${freeTime}`))\n  .catch(error => console.error(`Could not find free time: ${error}`))\n\nfunction findCityForZipCode(zipCode) {\n  if (Math.random() > 0.9) return Promise.reject("ZIP code search failed");\n  return Promise.resolve("Dresden");\n}\n\nfunction findMostFamousRestaurantForCity(city) {\n  if (Math.random() > 0.9) return Promise.reject("Restaurant search failed");\n  return Promise.resolve("Bistro Yukito (\u96ea\u90fd)");\n}\n\nfunction findOpenHoursForRestaurant(restaurant) {\n  if (Math.random() > 0.9) return Promise.reject("Open hours search failed");\n  return Promise.resolve("18:00-21:30");\n}\n\nfunction findUserFreeTimeForHours(hours) {\n  if (Math.random() > 0.9) return Promise.reject("Schedule search failed");\n  const mins = String(Math.floor(Math.random() * 60)).padStart(2, "0");\n  return Promise.resolve(`20:${mins}-21:${mins}`);\n}\n'}}]);