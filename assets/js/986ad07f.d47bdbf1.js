"use strict";(self.webpackChunkpackages_lecture=self.webpackChunkpackages_lecture||[]).push([[7436],{71184:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(14041);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}},80996:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>o,frontMatter:()=>s,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"exam/advanced/exam-advanced-chat","title":"Chat","description":"Chat zwischen 2 Teilnehmern per Websocket","source":"@site/docs/exam/advanced/chat.mdx","sourceDirName":"exam/advanced","slug":"/exam/basic/chat","permalink":"/badd-web-programming/docs/exam/basic/chat","draft":false,"unlisted":false,"editUrl":"https://github.com/blutorange/badd-web-programming/tree/main/packages/lecture/docs/exam/advanced/chat.mdx","tags":[],"version":"current","frontMatter":{"id":"exam-advanced-chat","slug":"/exam/basic/chat","description":"Chat zwischen 2 Teilnehmern per Websocket"},"sidebar":"tutorialSidebar","previous":{"title":"Brainfuck-Interpreter","permalink":"/badd-web-programming/docs/exam/basic/brainfuck-interpreter"},"next":{"title":"Dynamische Formularerstellung","permalink":"/badd-web-programming/docs/exam/basic/dynamic-form-generation"}}');var t=r(31085),a=r(71184);const s={id:"exam-advanced-chat",slug:"/exam/basic/chat",description:"Chat zwischen 2 Teilnehmern per Websocket"},c="Chat",d={},h=[{value:"Mindestanforderungen",id:"mindestanforderungen",level:2},{value:"Hinweise",id:"hinweise",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"chat",children:"Chat"})}),"\n",(0,t.jsx)(n.p,{children:"Hinweis: Diese Aufgabe richtet sich an diejenigen, welche auch etwas Serverprogrammierung\nausprobieren wollen."}),"\n",(0,t.jsxs)(n.p,{children:["Es soll ein Chat-Server erstellt werden, der es 2 Teilnehmern erlaubt, miteinander\nzu chatten. Die Kommunikation erfolgt mittels ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API",children:"Websocket"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"mindestanforderungen",children:"Mindestanforderungen"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Verbindung zwischen den Teilnehmern wird \xfcber eine Chatroom-ID hergestellt.\nJeder Teilnehmer mit der gleichen Chatroom-ID tritt dem gleichen Chat bei\nund kann dort Nachrichten schreiben."}),"\n",(0,t.jsx)(n.li,{children:"Jeder Teilnehmer muss zudem noch seinen Namen eingeben, dieser wird allen\nanderen Teilnehmern des Chatroom angezeigt."}),"\n",(0,t.jsx)(n.li,{children:"Jeder Teilnehmer eines Chatroom kann Textnachrichten in den Chatroom schreiben.\nDiese werden allen anderen Teilnehmern des Chatroom angezeigt, und zwar sobald\nwie technisch m\xf6glich (in der Regel nahezu sofort)."}),"\n",(0,t.jsx)(n.li,{children:"Es m\xfcssen nur Textnachrichten unterst\xfctzt werden, keine Bilder, Audios oder Videos."}),"\n",(0,t.jsx)(n.li,{children:"Es m\xfcssen keinerlei Sicherheitsaspekte ber\xfccksichtigt werden."}),"\n",(0,t.jsx)(n.li,{children:"Der Inhalt des Chatrooms soll serverseitig gespeichert werden, sodass bei Neuladen\nder Browser-Seite der Inhalt nicht verloren geht. Der Inhalt braucht aber nur\nim RAM gespeichert werden, d.h. bei Neustart des Servers m\xfcssen die Nachrichten nicht\nerhalten bleiben."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"hinweise",children:"Hinweise"}),"\n",(0,t.jsxs)(n.p,{children:["Serverseitig kann ",(0,t.jsx)(n.a,{href:"https://socket.io/",children:"Socket.IO"})," f\xfcr die Bereitstellung eines\nWebsocket-Servers verwendet werden."]}),"\n",(0,t.jsx)(n.p,{children:"Clientseitig kann ebenfalls Socket.IO genutzt werden, um die native Websocket-API\ndes Browsers zu vereinfachen."})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);