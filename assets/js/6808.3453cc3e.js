"use strict";(self.webpackChunkpackages_lecture=self.webpackChunkpackages_lecture||[]).push([[6808],{6808:(n,e,a)=>{a.r(e),a.d(e,{default:()=>s});const s='// For-Schleifen zum Summieren der Zahlen von 1 bis 100\nlet sum = 0;\nfor (let i = 0; i <= 100; i += 1) {\n  sum += i;\n}\nconsole.log(`Sum of 1...100 is ${sum}`);\n\n// Familienbaum von Axel, Person und ihre Eltern\nconst axel = {\n  name: "Axel",\n  parents: [\n    {\n      name: "Manfred",\n      parents: [\n        {\n          name: "Jonathan",\n          parents: [\n            { name: "Jakob", parents: [] },\n            { name: "Roselinde", parents: [] },\n          ],\n        },\n        {\n          name: "Magdalena",\n          parents: [\n            { name: "Heinrich", parents: [] },\n            { name: "Hildegard", parents: [] },\n          ],\n        },\n      ],\n    },\n    {\n      name: "Anna",\n      parents: [\n        {\n          name: "Heinrich",\n          parents: [\n            { name: "Christian", parents: [] },\n            { name: "Caroline", parents: [] },\n          ],\n        },\n        {\n          name: "Theresa",\n          parents: [\n            { name: "Balthasar", parents: [] },\n            { name: "Yvonne", parents: [] },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\n// Jetzt geben wir Axel und alle Eltern aus\n// (Technisch: Iteratives Depth-First-Traversal einer Baumstruktur)\nconst stack = [axel];\nwhile (stack.length > 0) {\n  const person = stack.pop();\n  console.log(`Visiting ${person.name}`);\n  for (let i = person.parents.length - 1; i >= 0; i--) {\n    stack.push(person.parents[i]);\n  }\n}\n'}}]);